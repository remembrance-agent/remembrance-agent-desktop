plugins {
    id 'java'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '4.0.4'
}

application {
    mainClassName = 'io.p13i.ra.RemembranceAgentClient'
}

def mainClassName = 'io.p13i.ra.RemembranceAgentClient'
def embeddedJRE = true

jar {
    manifest {
        attributes(
                'Main-Class': mainClassName
        )
    }
}


String envVersion = System.getenv('VERSION')
envVersion = envVersion != null ? envVersion : "2.0.0"

if (envVersion == null) {
    throw new RuntimeException("Version not found. Found " + envVersion);
}

group 'io.p13i'
version "v" + envVersion

targetCompatibility = 1.8
sourceCompatibility = 1.8

repositories {
    mavenCentral()
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
    maven { url 'https://jitpack.io' }
}

test {
    useJUnit()

    maxHeapSize = '1G'
}

dependencies {
    compile fileTree(dir: 'libs', include: '*.jar')
    testCompile group: 'junit', name: 'junit', version: '4.12'

    testImplementation 'junit:junit:4.12'
    
    // compile 'com.github.remembrance-agent:remembrance-agent:p13i~change-input-callback-SNAPSHOT'
    compile project(":remembrance-agent")

    // Google Drive API
    compile 'com.google.api-client:google-api-client:1.23.0'
    compile 'com.google.oauth-client:google-oauth-client-jetty:1.23.0'
    compile 'com.google.apis:google-api-services-drive:v3-rev110-1.23.0'

    // GSON
    compile 'com.google.code.gson:gson:2.8.5'

    // Gmail API
    compile 'com.google.apis:google-api-services-gmail:v1-rev83-1.23.0'

    // Speech Recognition
    compile group: 'com.google.cloud', name: 'google-cloud-speech', version: '1.13.0'

    // Apache Commons CLI
    compile group: 'commons-cli', name: 'commons-cli', version: '1.2'

    // jsoup HTML parser library @ https://jsoup.org/
    compile 'org.jsoup:jsoup:1.12.1'
}

task copyDependencies(type: Copy) {
    destinationDir libsDir
    from configurations.runtime
}

task javapackager(type: Exec, dependsOn: [assemble, copyDependencies]) {
    def nativeType
    if (System.properties['os.name'].toLowerCase().contains('windows'))
        nativeType = 'msi'
    if (System.properties['os.name'].toLowerCase().contains('mac'))
        nativeType = 'dmg'
    if (System.properties['os.name'].toLowerCase().contains('linux'))
        nativeType = 'rpm'

    def dependencies = []
    configurations.runtime.forEach({ file ->
        dependencies.add('-srcfiles')
        dependencies.add(file.getName())
    })

    def paramEmbeddedJRE = embeddedJRE ? [] : ['-Bruntime=']

    workingDir project.projectDir
    commandLine = [
            'javapackager',
            '-deploy',
            '-nosign',
            '-native', nativeType,
            '-outdir', "${buildDir}/dist",
            '-outfile', project.name,
            '-name', 'Remembrance Agent',
            '-appclass', mainClassName,
            '-srcdir', libsDir,
            '-srcfiles', jar.archiveName,
            '-BappVersion=' + envVersion
    ] + dependencies + paramEmbeddedJRE
}